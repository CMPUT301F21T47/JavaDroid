// Generated by view binder compiler. Do not edit!
package com.example.habitshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.habitshare.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHabitinfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button habitInfoBackButton;

  @NonNull
  public final TextView habitInfoDateTextview;

  @NonNull
  public final Button habitInfoDeleteButton;

  @NonNull
  public final Button habitInfoDenoteButton;

  @NonNull
  public final TextView habitInfoDescriptionTextview;

  @NonNull
  public final Button habitInfoEditButton;

  @NonNull
  public final TextView habitInfoFrequencyTextview;

  @NonNull
  public final TextView habitInfoHabitTextview;

  private ActivityHabitinfoBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button habitInfoBackButton, @NonNull TextView habitInfoDateTextview,
      @NonNull Button habitInfoDeleteButton, @NonNull Button habitInfoDenoteButton,
      @NonNull TextView habitInfoDescriptionTextview, @NonNull Button habitInfoEditButton,
      @NonNull TextView habitInfoFrequencyTextview, @NonNull TextView habitInfoHabitTextview) {
    this.rootView = rootView;
    this.habitInfoBackButton = habitInfoBackButton;
    this.habitInfoDateTextview = habitInfoDateTextview;
    this.habitInfoDeleteButton = habitInfoDeleteButton;
    this.habitInfoDenoteButton = habitInfoDenoteButton;
    this.habitInfoDescriptionTextview = habitInfoDescriptionTextview;
    this.habitInfoEditButton = habitInfoEditButton;
    this.habitInfoFrequencyTextview = habitInfoFrequencyTextview;
    this.habitInfoHabitTextview = habitInfoHabitTextview;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHabitinfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHabitinfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_habitinfo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHabitinfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.habitInfoBackButton;
      Button habitInfoBackButton = ViewBindings.findChildViewById(rootView, id);
      if (habitInfoBackButton == null) {
        break missingId;
      }

      id = R.id.habitInfoDateTextview;
      TextView habitInfoDateTextview = ViewBindings.findChildViewById(rootView, id);
      if (habitInfoDateTextview == null) {
        break missingId;
      }

      id = R.id.habitInfoDeleteButton;
      Button habitInfoDeleteButton = ViewBindings.findChildViewById(rootView, id);
      if (habitInfoDeleteButton == null) {
        break missingId;
      }

      id = R.id.habitInfoDenoteButton;
      Button habitInfoDenoteButton = ViewBindings.findChildViewById(rootView, id);
      if (habitInfoDenoteButton == null) {
        break missingId;
      }

      id = R.id.habitInfoDescriptionTextview;
      TextView habitInfoDescriptionTextview = ViewBindings.findChildViewById(rootView, id);
      if (habitInfoDescriptionTextview == null) {
        break missingId;
      }

      id = R.id.habitInfoEditButton;
      Button habitInfoEditButton = ViewBindings.findChildViewById(rootView, id);
      if (habitInfoEditButton == null) {
        break missingId;
      }

      id = R.id.habitInfoFrequencyTextview;
      TextView habitInfoFrequencyTextview = ViewBindings.findChildViewById(rootView, id);
      if (habitInfoFrequencyTextview == null) {
        break missingId;
      }

      id = R.id.habitInfoHabitTextview;
      TextView habitInfoHabitTextview = ViewBindings.findChildViewById(rootView, id);
      if (habitInfoHabitTextview == null) {
        break missingId;
      }

      return new ActivityHabitinfoBinding((ConstraintLayout) rootView, habitInfoBackButton,
          habitInfoDateTextview, habitInfoDeleteButton, habitInfoDenoteButton,
          habitInfoDescriptionTextview, habitInfoEditButton, habitInfoFrequencyTextview,
          habitInfoHabitTextview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
