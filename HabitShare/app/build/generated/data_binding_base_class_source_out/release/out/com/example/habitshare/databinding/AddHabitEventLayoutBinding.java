// Generated by view binder compiler. Do not edit!
package com.example.habitshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.habitshare.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddHabitEventLayoutBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button denoteHabitCancelButton;

  @NonNull
  public final EditText denoteHabitComment;

  @NonNull
  public final Button denoteHabitConfirmButton;

  @NonNull
  public final TextView denoteHabitName;

  @NonNull
  public final ImageView habitEventImage;

  private AddHabitEventLayoutBinding(@NonNull FrameLayout rootView,
      @NonNull Button denoteHabitCancelButton, @NonNull EditText denoteHabitComment,
      @NonNull Button denoteHabitConfirmButton, @NonNull TextView denoteHabitName,
      @NonNull ImageView habitEventImage) {
    this.rootView = rootView;
    this.denoteHabitCancelButton = denoteHabitCancelButton;
    this.denoteHabitComment = denoteHabitComment;
    this.denoteHabitConfirmButton = denoteHabitConfirmButton;
    this.denoteHabitName = denoteHabitName;
    this.habitEventImage = habitEventImage;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddHabitEventLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddHabitEventLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_habit_event_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddHabitEventLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.denote_habit_cancel_button;
      Button denoteHabitCancelButton = ViewBindings.findChildViewById(rootView, id);
      if (denoteHabitCancelButton == null) {
        break missingId;
      }

      id = R.id.denote_habit_comment;
      EditText denoteHabitComment = ViewBindings.findChildViewById(rootView, id);
      if (denoteHabitComment == null) {
        break missingId;
      }

      id = R.id.denote_habit_confirm_button;
      Button denoteHabitConfirmButton = ViewBindings.findChildViewById(rootView, id);
      if (denoteHabitConfirmButton == null) {
        break missingId;
      }

      id = R.id.denote_habit_name;
      TextView denoteHabitName = ViewBindings.findChildViewById(rootView, id);
      if (denoteHabitName == null) {
        break missingId;
      }

      id = R.id.habit_event_image;
      ImageView habitEventImage = ViewBindings.findChildViewById(rootView, id);
      if (habitEventImage == null) {
        break missingId;
      }

      return new AddHabitEventLayoutBinding((FrameLayout) rootView, denoteHabitCancelButton,
          denoteHabitComment, denoteHabitConfirmButton, denoteHabitName, habitEventImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
