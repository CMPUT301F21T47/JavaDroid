// Generated by view binder compiler. Do not edit!
package com.example.habitshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.habitshare.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewHabitDetailLayoutBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button buttonCancelViewHabit;

  @NonNull
  public final Button buttonDeleteViewHabit;

  @NonNull
  public final Button buttonDenoteHabit;

  @NonNull
  public final Button buttonEditHabit;

  @NonNull
  public final TextView viewDateViewHabit;

  @NonNull
  public final TextView viewDaysOfWeek;

  @NonNull
  public final TextView viewHabitTitle;

  @NonNull
  public final TextView viewReason;

  private ViewHabitDetailLayoutBinding(@NonNull FrameLayout rootView,
      @NonNull Button buttonCancelViewHabit, @NonNull Button buttonDeleteViewHabit,
      @NonNull Button buttonDenoteHabit, @NonNull Button buttonEditHabit,
      @NonNull TextView viewDateViewHabit, @NonNull TextView viewDaysOfWeek,
      @NonNull TextView viewHabitTitle, @NonNull TextView viewReason) {
    this.rootView = rootView;
    this.buttonCancelViewHabit = buttonCancelViewHabit;
    this.buttonDeleteViewHabit = buttonDeleteViewHabit;
    this.buttonDenoteHabit = buttonDenoteHabit;
    this.buttonEditHabit = buttonEditHabit;
    this.viewDateViewHabit = viewDateViewHabit;
    this.viewDaysOfWeek = viewDaysOfWeek;
    this.viewHabitTitle = viewHabitTitle;
    this.viewReason = viewReason;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewHabitDetailLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewHabitDetailLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_habit_detail_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewHabitDetailLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_cancel_view_habit;
      Button buttonCancelViewHabit = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancelViewHabit == null) {
        break missingId;
      }

      id = R.id.button_delete_view_habit;
      Button buttonDeleteViewHabit = ViewBindings.findChildViewById(rootView, id);
      if (buttonDeleteViewHabit == null) {
        break missingId;
      }

      id = R.id.button_denote_habit;
      Button buttonDenoteHabit = ViewBindings.findChildViewById(rootView, id);
      if (buttonDenoteHabit == null) {
        break missingId;
      }

      id = R.id.button_edit_habit;
      Button buttonEditHabit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEditHabit == null) {
        break missingId;
      }

      id = R.id.view_date_view_habit;
      TextView viewDateViewHabit = ViewBindings.findChildViewById(rootView, id);
      if (viewDateViewHabit == null) {
        break missingId;
      }

      id = R.id.view_days_of_week;
      TextView viewDaysOfWeek = ViewBindings.findChildViewById(rootView, id);
      if (viewDaysOfWeek == null) {
        break missingId;
      }

      id = R.id.view_habit_title;
      TextView viewHabitTitle = ViewBindings.findChildViewById(rootView, id);
      if (viewHabitTitle == null) {
        break missingId;
      }

      id = R.id.view_reason;
      TextView viewReason = ViewBindings.findChildViewById(rootView, id);
      if (viewReason == null) {
        break missingId;
      }

      return new ViewHabitDetailLayoutBinding((FrameLayout) rootView, buttonCancelViewHabit,
          buttonDeleteViewHabit, buttonDenoteHabit, buttonEditHabit, viewDateViewHabit,
          viewDaysOfWeek, viewHabitTitle, viewReason);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
