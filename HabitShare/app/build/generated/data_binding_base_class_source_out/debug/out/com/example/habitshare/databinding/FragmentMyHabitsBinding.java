// Generated by view binder compiler. Do not edit!
package com.example.habitshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.habitshare.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMyHabitsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RelativeLayout addHabitContainer;

  @NonNull
  public final FloatingActionButton buttonAddHabit;

  @NonNull
  public final Button confirmReorder;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final RecyclerView myHabitList;

  @NonNull
  public final Button reorder;

  @NonNull
  public final TextView switchDescription;

  @NonNull
  public final SwitchMaterial switchTodayAll;

  private FragmentMyHabitsBinding(@NonNull ConstraintLayout rootView,
      @NonNull RelativeLayout addHabitContainer, @NonNull FloatingActionButton buttonAddHabit,
      @NonNull Button confirmReorder, @NonNull LinearLayout linearLayout,
      @NonNull RecyclerView myHabitList, @NonNull Button reorder,
      @NonNull TextView switchDescription, @NonNull SwitchMaterial switchTodayAll) {
    this.rootView = rootView;
    this.addHabitContainer = addHabitContainer;
    this.buttonAddHabit = buttonAddHabit;
    this.confirmReorder = confirmReorder;
    this.linearLayout = linearLayout;
    this.myHabitList = myHabitList;
    this.reorder = reorder;
    this.switchDescription = switchDescription;
    this.switchTodayAll = switchTodayAll;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMyHabitsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMyHabitsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_my_habits, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMyHabitsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_habit_container;
      RelativeLayout addHabitContainer = ViewBindings.findChildViewById(rootView, id);
      if (addHabitContainer == null) {
        break missingId;
      }

      id = R.id.button_add_habit;
      FloatingActionButton buttonAddHabit = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddHabit == null) {
        break missingId;
      }

      id = R.id.confirm_reorder;
      Button confirmReorder = ViewBindings.findChildViewById(rootView, id);
      if (confirmReorder == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.my_habit_list;
      RecyclerView myHabitList = ViewBindings.findChildViewById(rootView, id);
      if (myHabitList == null) {
        break missingId;
      }

      id = R.id.reorder;
      Button reorder = ViewBindings.findChildViewById(rootView, id);
      if (reorder == null) {
        break missingId;
      }

      id = R.id.switch_description;
      TextView switchDescription = ViewBindings.findChildViewById(rootView, id);
      if (switchDescription == null) {
        break missingId;
      }

      id = R.id.switch_today_all;
      SwitchMaterial switchTodayAll = ViewBindings.findChildViewById(rootView, id);
      if (switchTodayAll == null) {
        break missingId;
      }

      return new FragmentMyHabitsBinding((ConstraintLayout) rootView, addHabitContainer,
          buttonAddHabit, confirmReorder, linearLayout, myHabitList, reorder, switchDescription,
          switchTodayAll);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
